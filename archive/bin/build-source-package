#!/bin/sh
#
# Script used to build a source package specific to a sub-project.

echo "Please, from a clean version of the repository use:"
echo "   dpkg-source -b <project-name>"
echo "from the root directory"
exit 1;


### DEPRECATED!

DELETE_BUILD_FOLDER=true
if test $1 = "--keep-build-folder"
then
	DELETE_BUILD_FOLDER=false
	shift
fi
if test "$1" = "snapwebsites" -o "$1" = "snapCMakeModules" -o "$1" = "zipios"
then
	echo "error: project $1 cannot be built with this script."
	exit 1;
fi
if test ! -d $1
then
	echo "error: $1 is not a sub-folder."
	exit 1;
fi;
# remove ending /
project=`echo "$1" | sed -e 'sX/$XX'`

cd $project

# Refresh all the output folders
rm -fr BUILD snapCMakeModules 3rdParty
mkdir BUILD

# Make sure we have a build folder at the top
mkdir -p BUILD/$project/doc

ln -s ../snapCMakeModules .
if test "$project" = "libQtCassandra"
then
	# We could use a softlink here, but then we'd get all 3rd party
	# libraries when at this point we just need thrift to compile
	# (the Cassandra include are in libQtCassandra/thrift-gencpp-cassandra)
	mkdir 3rdParty
	cp ../3rdParty/CMakeLists.txt 3rdParty/.
	cp ../3rdParty/thrift-0.9.0.tar.gz 3rdParty/.
fi;
cd BUILD
if ! cmake ..
then
	echo
	echo "error: cmake failed..."
	exit 1;
fi
if ! make
then
	echo
	echo "error: make failed..."
	exit 1;
fi
make package_source

# here we get a source package with a version
echo "---- main folder:"
ls
if test -d doc
then
	echo "---- doc folder:"
	ls doc
fi;

echo "----"
cp -i $project-*.tar.gz ../../packages/.
mv -vf $project-*.tar.gz ../../BUILD/$project/.

if test -d doc
then
	cp -i doc/*$project-doc-*.tar.gz ../../packages/.
	mv -vf doc/*$project-doc-*.tar.gz ../../BUILD/$project/doc/.
else
	echo "*** WARNING *** -- no doc folder found, no documentation was extracted"
fi

cd ..
if $DELETE_BUILD_FOLDER
then
	rm -rf BUILD snapCMakeModules 3rdParty
fi

echo "Done!"
